package com.therealdanvega.domain;
// Generated Apr 14, 2018 9:37:20 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TestSection generated by hbm2java
 */
@Entity
@Table(name = "test_section", catalog = "testts")
public class TestSection implements java.io.Serializable {

	private Integer testSectionId;
	private Test test;
	private String testSectionCode;
	private String testSectionDesc;
	private Integer testSectionOrder;
	private Set<TestQuestionMap> testQuestionMaps = new HashSet<TestQuestionMap>(0);

	public TestSection() {
	}

	public TestSection(Test test, String testSectionCode, String testSectionDesc, Integer testSectionOrder,
			Set<TestQuestionMap> testQuestionMaps) {
		this.test = test;
		this.testSectionCode = testSectionCode;
		this.testSectionDesc = testSectionDesc;
		this.testSectionOrder = testSectionOrder;
		this.testQuestionMaps = testQuestionMaps;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "test_section_id", unique = true, nullable = false)
	public Integer getTestSectionId() {
		return this.testSectionId;
	}

	public void setTestSectionId(Integer testSectionId) {
		this.testSectionId = testSectionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "test_id")
	public Test getTest() {
		return this.test;
	}

	public void setTest(Test test) {
		this.test = test;
	}

	@Column(name = "test_section_code", length = 10)
	public String getTestSectionCode() {
		return this.testSectionCode;
	}

	public void setTestSectionCode(String testSectionCode) {
		this.testSectionCode = testSectionCode;
	}

	@Column(name = "test_section_desc", length = 65535)
	public String getTestSectionDesc() {
		return this.testSectionDesc;
	}

	public void setTestSectionDesc(String testSectionDesc) {
		this.testSectionDesc = testSectionDesc;
	}

	@Column(name = "test_section_order")
	public Integer getTestSectionOrder() {
		return this.testSectionOrder;
	}

	public void setTestSectionOrder(Integer testSectionOrder) {
		this.testSectionOrder = testSectionOrder;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "testSection")
	public Set<TestQuestionMap> getTestQuestionMaps() {
		return this.testQuestionMaps;
	}

	public void setTestQuestionMaps(Set<TestQuestionMap> testQuestionMaps) {
		this.testQuestionMaps = testQuestionMaps;
	}

}
