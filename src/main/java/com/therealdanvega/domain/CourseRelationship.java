package com.therealdanvega.domain;
// Generated Mar 4, 2018 2:56:35 PM by Hibernate Tools 4.3.5.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CourseRelationship generated by hbm2java
 */
@Entity
@Table(name = "course_relationship", catalog = "mycontact")
public class CourseRelationship implements java.io.Serializable {

	private Integer courseRelationshipId;
	private Course courseByParentCourseId;
	private Course courseByChildCourseId;
	private CourseRelationshipType courseRelationshipType;
	private String courseRelationshipDesc;

	public CourseRelationship() {
	}

	public CourseRelationship(Course courseByParentCourseId, Course courseByChildCourseId,
			CourseRelationshipType courseRelationshipType, String courseRelationshipDesc) {
		this.courseByParentCourseId = courseByParentCourseId;
		this.courseByChildCourseId = courseByChildCourseId;
		this.courseRelationshipType = courseRelationshipType;
		this.courseRelationshipDesc = courseRelationshipDesc;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "course_relationship_id", unique = true, nullable = false)
	public Integer getCourseRelationshipId() {
		return this.courseRelationshipId;
	}

	public void setCourseRelationshipId(Integer courseRelationshipId) {
		this.courseRelationshipId = courseRelationshipId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_course_id")
	public Course getCourseByParentCourseId() {
		return this.courseByParentCourseId;
	}

	public void setCourseByParentCourseId(Course courseByParentCourseId) {
		this.courseByParentCourseId = courseByParentCourseId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "child_course_id")
	public Course getCourseByChildCourseId() {
		return this.courseByChildCourseId;
	}

	public void setCourseByChildCourseId(Course courseByChildCourseId) {
		this.courseByChildCourseId = courseByChildCourseId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_relationship_type_id")
	public CourseRelationshipType getCourseRelationshipType() {
		return this.courseRelationshipType;
	}

	public void setCourseRelationshipType(CourseRelationshipType courseRelationshipType) {
		this.courseRelationshipType = courseRelationshipType;
	}

	@Column(name = "course_relationship_desc", length = 65535)
	public String getCourseRelationshipDesc() {
		return this.courseRelationshipDesc;
	}

	public void setCourseRelationshipDesc(String courseRelationshipDesc) {
		this.courseRelationshipDesc = courseRelationshipDesc;
	}

}
