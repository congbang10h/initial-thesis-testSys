package com.therealdanvega.domain;
// Generated Apr 14, 2018 9:37:20 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TestAccessMode generated by hbm2java
 */
@Entity
@Table(name = "test_access_mode", catalog = "testts")
public class TestAccessMode implements java.io.Serializable {

	private Integer testAccessModeId;
	private Previlege previlege;
	private Role role;
	private Test test;
	private User userByAccessorId;
	private User userByGrantorId;
	private Date testAccessModeGrantedDate;
	private Date testAccessModeValidStartdate;
	private Date testAccessModeValidEnddate;
	private Date testAccessModeValidStarttime;
	private Date testAccessModeValidEndtime;
	private boolean testAccessModeIsDisabled;
	private String testAccessModeDesc;

	public TestAccessMode() {
	}

	public TestAccessMode(Date testAccessModeGrantedDate, Date testAccessModeValidStartdate,
			Date testAccessModeValidStarttime, boolean testAccessModeIsDisabled) {
		this.testAccessModeGrantedDate = testAccessModeGrantedDate;
		this.testAccessModeValidStartdate = testAccessModeValidStartdate;
		this.testAccessModeValidStarttime = testAccessModeValidStarttime;
		this.testAccessModeIsDisabled = testAccessModeIsDisabled;
	}

	public TestAccessMode(Previlege previlege, Role role, Test test, User userByAccessorId, User userByGrantorId,
			Date testAccessModeGrantedDate, Date testAccessModeValidStartdate, Date testAccessModeValidEnddate,
			Date testAccessModeValidStarttime, Date testAccessModeValidEndtime, boolean testAccessModeIsDisabled,
			String testAccessModeDesc) {
		this.previlege = previlege;
		this.role = role;
		this.test = test;
		this.userByAccessorId = userByAccessorId;
		this.userByGrantorId = userByGrantorId;
		this.testAccessModeGrantedDate = testAccessModeGrantedDate;
		this.testAccessModeValidStartdate = testAccessModeValidStartdate;
		this.testAccessModeValidEnddate = testAccessModeValidEnddate;
		this.testAccessModeValidStarttime = testAccessModeValidStarttime;
		this.testAccessModeValidEndtime = testAccessModeValidEndtime;
		this.testAccessModeIsDisabled = testAccessModeIsDisabled;
		this.testAccessModeDesc = testAccessModeDesc;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "test_access_mode_id", unique = true, nullable = false)
	public Integer getTestAccessModeId() {
		return this.testAccessModeId;
	}

	public void setTestAccessModeId(Integer testAccessModeId) {
		this.testAccessModeId = testAccessModeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "previlege_id")
	public Previlege getPrevilege() {
		return this.previlege;
	}

	public void setPrevilege(Previlege previlege) {
		this.previlege = previlege;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id")
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "test_id")
	public Test getTest() {
		return this.test;
	}

	public void setTest(Test test) {
		this.test = test;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "accessor_id")
	public User getUserByAccessorId() {
		return this.userByAccessorId;
	}

	public void setUserByAccessorId(User userByAccessorId) {
		this.userByAccessorId = userByAccessorId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "grantor_id")
	public User getUserByGrantorId() {
		return this.userByGrantorId;
	}

	public void setUserByGrantorId(User userByGrantorId) {
		this.userByGrantorId = userByGrantorId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "test_access_mode_granted_date", nullable = false, length = 10)
	public Date getTestAccessModeGrantedDate() {
		return this.testAccessModeGrantedDate;
	}

	public void setTestAccessModeGrantedDate(Date testAccessModeGrantedDate) {
		this.testAccessModeGrantedDate = testAccessModeGrantedDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "test_access_mode_valid_startdate", nullable = false, length = 10)
	public Date getTestAccessModeValidStartdate() {
		return this.testAccessModeValidStartdate;
	}

	public void setTestAccessModeValidStartdate(Date testAccessModeValidStartdate) {
		this.testAccessModeValidStartdate = testAccessModeValidStartdate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "test_access_mode_valid_enddate", length = 10)
	public Date getTestAccessModeValidEnddate() {
		return this.testAccessModeValidEnddate;
	}

	public void setTestAccessModeValidEnddate(Date testAccessModeValidEnddate) {
		this.testAccessModeValidEnddate = testAccessModeValidEnddate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "test_access_mode_valid_starttime", nullable = false, length = 8)
	public Date getTestAccessModeValidStarttime() {
		return this.testAccessModeValidStarttime;
	}

	public void setTestAccessModeValidStarttime(Date testAccessModeValidStarttime) {
		this.testAccessModeValidStarttime = testAccessModeValidStarttime;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "test_access_mode_valid_endtime", length = 8)
	public Date getTestAccessModeValidEndtime() {
		return this.testAccessModeValidEndtime;
	}

	public void setTestAccessModeValidEndtime(Date testAccessModeValidEndtime) {
		this.testAccessModeValidEndtime = testAccessModeValidEndtime;
	}

	@Column(name = "test_access_mode_is_disabled", nullable = false)
	public boolean isTestAccessModeIsDisabled() {
		return this.testAccessModeIsDisabled;
	}

	public void setTestAccessModeIsDisabled(boolean testAccessModeIsDisabled) {
		this.testAccessModeIsDisabled = testAccessModeIsDisabled;
	}

	@Column(name = "test_access_mode_desc", length = 65535)
	public String getTestAccessModeDesc() {
		return this.testAccessModeDesc;
	}

	public void setTestAccessModeDesc(String testAccessModeDesc) {
		this.testAccessModeDesc = testAccessModeDesc;
	}

}
