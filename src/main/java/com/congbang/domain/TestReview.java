package com.congbang.domain;
// Generated Apr 14, 2018 9:37:20 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TestReview generated by hbm2java
 */
@Entity
@Table(name = "test_review", catalog = "testts")
public class TestReview implements java.io.Serializable {

	private Integer testReviewId;
	private Test test;
	private TestReview testReview;
	private User user;
	private int testReviewCode;
	private String testReviewDesc;
	private Date testReviewTime;
	private Set<TestReview> testReviews = new HashSet<TestReview>(0);

	public TestReview() {
	}

	public TestReview(Test test, User user, int testReviewCode) {
		this.test = test;
		this.user = user;
		this.testReviewCode = testReviewCode;
	}

	public TestReview(Test test, TestReview testReview, User user, int testReviewCode, String testReviewDesc,
			Date testReviewTime, Set<TestReview> testReviews) {
		this.test = test;
		this.testReview = testReview;
		this.user = user;
		this.testReviewCode = testReviewCode;
		this.testReviewDesc = testReviewDesc;
		this.testReviewTime = testReviewTime;
		this.testReviews = testReviews;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "test_review_id", unique = true, nullable = false)
	public Integer getTestReviewId() {
		return this.testReviewId;
	}

	public void setTestReviewId(Integer testReviewId) {
		this.testReviewId = testReviewId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "test_id", nullable = false)
	public Test getTest() {
		return this.test;
	}

	public void setTest(Test test) {
		this.test = test;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "test_review_parent_id")
	public TestReview getTestReview() {
		return this.testReview;
	}

	public void setTestReview(TestReview testReview) {
		this.testReview = testReview;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "test_review_code", nullable = false)
	public int getTestReviewCode() {
		return this.testReviewCode;
	}

	public void setTestReviewCode(int testReviewCode) {
		this.testReviewCode = testReviewCode;
	}

	@Column(name = "test_review_desc", length = 65535)
	public String getTestReviewDesc() {
		return this.testReviewDesc;
	}

	public void setTestReviewDesc(String testReviewDesc) {
		this.testReviewDesc = testReviewDesc;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "test_review_time", length = 19)
	public Date getTestReviewTime() {
		return this.testReviewTime;
	}

	public void setTestReviewTime(Date testReviewTime) {
		this.testReviewTime = testReviewTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "testReview")
	public Set<TestReview> getTestReviews() {
		return this.testReviews;
	}

	public void setTestReviews(Set<TestReview> testReviews) {
		this.testReviews = testReviews;
	}

}
